diff --git a/lib/peer.ts b/lib/peer.ts
index 6fa306c..66cab2f 100644
--- a/lib/peer.ts
+++ b/lib/peer.ts
@@ -238,11 +238,6 @@ export class Peer extends EventEmitterWithError<PeerErrorType, PeerEvents> {
 		this._options = options;
 		this._serializers = { ...this._serializers, ...this.options.serializers };
 
-		// Detect relative URL host.
-		if (this._options.host === "/") {
-			this._options.host = window.location.hostname;
-		}
-
 		// Set path correctly.
 		if (this._options.path) {
 			if (this._options.path[0] !== "/") {
diff --git a/lib/supports.ts b/lib/supports.ts
index c06c105..7a1f940 100644
--- a/lib/supports.ts
+++ b/lib/supports.ts
@@ -1,8 +1,3 @@
-import webRTCAdapter_import from "webrtc-adapter";
-
-const webRTCAdapter: typeof webRTCAdapter_import =
-	//@ts-ignore
-	webRTCAdapter_import.default || webRTCAdapter_import;
 
 export const Supports = new (class {
 	readonly isIOS =
@@ -36,40 +31,15 @@ export const Supports = new (class {
 	}
 
 	getBrowser(): string {
-		return webRTCAdapter.browserDetails.browser;
+		return 'chrome';
 	}
 
 	getVersion(): number {
-		return webRTCAdapter.browserDetails.version || 0;
+		return this.minChromeVersion;
 	}
 
 	isUnifiedPlanSupported(): boolean {
-		const browser = this.getBrowser();
-		const version = webRTCAdapter.browserDetails.version || 0;
-
-		if (browser === "chrome" && version < this.minChromeVersion) return false;
-		if (browser === "firefox" && version >= this.minFirefoxVersion) return true;
-		if (
-			!window.RTCRtpTransceiver ||
-			!("currentDirection" in RTCRtpTransceiver.prototype)
-		)
-			return false;
-
-		let tempPc: RTCPeerConnection;
-		let supported = false;
-
-		try {
-			tempPc = new RTCPeerConnection();
-			tempPc.addTransceiver("audio");
-			supported = true;
-		} catch (e) {
-		} finally {
-			if (tempPc) {
-				tempPc.close();
-			}
-		}
-
-		return supported;
+		return false;
 	}
 
 	toString(): string {
